/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'liguofeng' at '17/02/27 23:00' with Gradle 2.14.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.14.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

ext {
    // The drivers we want to use
    drivers = ["firefox", "chrome", "phantomJs","ie"]
    groovyVersion = '2.4.7'
    gebVersion = '1.0'
    spockVersion = '1.1-groovy-2.4-rc-1'
    seleniumVersion = '3.0.1'
    chromeDriverVersion = '2.27'
    geckoDriverVersion = '0.13.0'
    ieDriverVersion = '3.0.0'
    ieDriverMajorVersion = '3.0'
    phantomJsVersion = '2.1.1'
    yamlVersion = '1.17'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'

    // for geb
	compile "org.gebish:geb-core:1.1.1"


	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
	// Drivers
    testCompile "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"
    testCompile "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion"
    testCompile "org.seleniumhq.selenium:selenium-ie-driver:$seleniumVersion"
    testCompile "org.seleniumhq.selenium:selenium-java:$seleniumVersion"
    testCompile "org.seleniumhq.selenium:selenium-support:$seleniumVersion"
    testCompile("com.codeborne:phantomjsdriver:1.2.1") {
        // phantomjs driver pulls in a different selenium version
        transitive = false
    }

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
